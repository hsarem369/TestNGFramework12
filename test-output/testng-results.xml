<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
<<<<<<< HEAD
  <suite started-at="2023-09-11T17:45:53 PDT" name="Default suite" finished-at="2023-09-11T17:45:53 PDT" duration-ms="211">
    <groups>
      <group name="regression">
        <method signature="TestNG_GroupingAndDependency.test4()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" name="test4" class="tests.TestNG_GroupingAndDependency"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="TestNG_GroupingAndDependency.test1()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" name="test1" class="tests.TestNG_GroupingAndDependency"/>
        <method signature="TestNG_GroupingAndDependency.test2()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" name="test2" class="tests.TestNG_GroupingAndDependency"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-09-11T17:45:53 PDT" name="Default test" finished-at="2023-09-11T17:45:53 PDT" duration-ms="211">
      <class name="tests.TestNG_GroupingAndDependency">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeSuite" finished-at="2023-09-11T17:45:53 PDT" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforTest()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforTest" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeClass" finished-at="2023-09-11T17:45:53 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="alwaysRun()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="alwaysRun" finished-at="2023-09-11T17:45:53 PDT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alwaysRun -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="description()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="description" description="it is not ready yet" finished-at="2023-09-11T17:45:53 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- description -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runTestMultipleTimes()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="runTestMultipleTimes" finished-at="2023-09-11T17:45:53 PDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runTestMultipleTimes()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="runTestMultipleTimes" finished-at="2023-09-11T17:45:53 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="test1" finished-at="2023-09-11T17:45:53 PDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="test" finished-at="2023-09-11T17:45:53 PDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="test2" finished-at="2023-09-11T17:45:53 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test4()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="test4" finished-at="2023-09-11T17:45:53 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dependsOnMethods()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="dependsOnMethods" finished-at="2023-09-11T17:45:53 PDT" depends-on-methods="tests.TestNG_GroupingAndDependency.alwaysRun" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependsOnMethods -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="beforeMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test5()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="test5" depends-on-groups="regression" finished-at="2023-09-11T17:45:53 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterMethod" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterClass" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterTest" finished-at="2023-09-11T17:45:53 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="gracefulTearDown()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="gracefulTearDown" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gracefulTearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.TestNG_GroupingAndDependency@55b5cd2b]" started-at="2023-09-11T17:45:53 PDT" name="afterSuite" finished-at="2023-09-11T17:45:53 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNG_GroupingAndDependency -->
=======
  <suite started-at="2023-09-11T18:51:58 PDT" name="Default suite" finished-at="2023-09-11T18:52:06 PDT" duration-ms="7983">
    <groups>
    </groups>
    <test started-at="2023-09-11T18:51:58 PDT" name="Default test" finished-at="2023-09-11T18:52:06 PDT" duration-ms="7983">
      <class name="tests.Assertion">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.Assertion@15c25153]" started-at="2023-09-11T18:51:58 PDT" name="beforeClass" finished-at="2023-09-11T18:52:05 PDT" duration-ms="6728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifytest0()[pri:0, instance:tests.Assertion@15c25153]" started-at="2023-09-11T18:52:05 PDT" name="verifytest0" finished-at="2023-09-11T18:52:05 PDT" duration-ms="244" status="FAIL">
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<[]Maven Repository: Se...> but was:<[aq]Maven Repository: Se...>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<[]Maven Repository: Se...> but was:<[aq]Maven Repository: Se...>
at org.junit.Assert.assertEquals(Assert.java:115)
at org.junit.Assert.assertEquals(Assert.java:144)
at tests.Assertion.verifytest0(Assertion.java:44)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytest0 -->
        <test-method signature="verifytest()[pri:1, instance:tests.Assertion@15c25153]" started-at="2023-09-11T18:52:05 PDT" name="verifytest" finished-at="2023-09-11T18:52:05 PDT" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytest -->
        <test-method signature="verifyTitle()[pri:2, instance:tests.Assertion@15c25153]" started-at="2023-09-11T18:52:05 PDT" name="verifyTitle" finished-at="2023-09-11T18:52:05 PDT" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method signature="verifyElement()[pri:3, instance:tests.Assertion@15c25153]" started-at="2023-09-11T18:52:05 PDT" name="verifyElement" finished-at="2023-09-11T18:52:05 PDT" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyElement -->
        <test-method signature="lastTest()[pri:4, instance:tests.Assertion@15c25153]" started-at="2023-09-11T18:52:05 PDT" name="lastTest" finished-at="2023-09-11T18:52:05 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastTest -->
        <test-method is-config="true" signature="closedriver()[pri:0, instance:tests.Assertion@15c25153]" started-at="2023-09-11T18:52:05 PDT" name="closedriver" finished-at="2023-09-11T18:52:06 PDT" duration-ms="500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedriver -->
      </class> <!-- tests.Assertion -->
>>>>>>> 436baf4546cbec83bfdf79581adc6516abb10785
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
