<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="30" passed="27" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-25T19:07:58 PDT" name="Surefire suite" finished-at="2023-09-25T19:08:13 PDT" duration-ms="14981">
    <groups>
      <group name="regression">
        <method signature="TestNG_GroupingAndDependency.test4()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" name="test4" class="tests.TestNG_GroupingAndDependency"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="TestNG_GroupingAndDependency.test1()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" name="test1" class="tests.TestNG_GroupingAndDependency"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-09-25T19:07:58 PDT" name="Surefire test" finished-at="2023-09-25T19:08:13 PDT" duration-ms="14981">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.LoginTest@2002348]" started-at="2023-09-25T19:07:58 PDT" name="beforeTest" finished-at="2023-09-25T19:08:10 PDT" duration-ms="11541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="login()[pri:0, instance:tests.LoginTest@2002348]" started-at="2023-09-25T19:08:12 PDT" name="login" finished-at="2023-09-25T19:08:12 PDT" duration-ms="32" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.LoginTest.login(LoginTest.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.LoginTest@2002348]" started-at="2023-09-25T19:08:13 PDT" name="afterTest" finished-at="2023-09-25T19:08:13 PDT" duration-ms="10" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=116.0.5845.188)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [163f439627ffe59c7d0bfef3454fa899, close {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\user\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57396}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57396/devtoo..., se:cdpVersion: 116.0.5845.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 163f439627ffe59c7d0bfef3454fa899]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=116.0.5845.188)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [163f439627ffe59c7d0bfef3454fa899, close {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\user\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57396}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57396/devtoo..., se:cdpVersion: 116.0.5845.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 163f439627ffe59c7d0bfef3454fa899
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:541)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:596)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:432)
at core.BaseClass.tearDown(BaseClass.java:112)
at tests.LoginTest.afterTest(LoginTest.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:663)
at org.testng.TestRunner.afterRun(TestRunner.java:933)
at org.testng.TestRunner.run(TestRunner.java:624)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.TestNG_Annotations">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:07:58 PDT" name="beforeSuite" finished-at="2023-09-25T19:07:58 PDT" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="beforeTest" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="beforeClass" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="failTest()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="failTest" finished-at="2023-09-25T19:08:12 PDT" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at tests.TestNG_Annotations.failTest(TestNG_Annotations.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="login()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="login" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test0()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="test0" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test0 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test1()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="test1" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="test2" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="afterClass" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="afterTest" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.TestNG_Annotations@2d1dee39]" started-at="2023-09-25T19:08:13 PDT" name="afterSuite" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNG_Annotations -->
      <class name="tests.TestNG_GroupingAndDependency">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:07:58 PDT" name="beforeSuite" finished-at="2023-09-25T19:07:58 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforTest()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="beforTest" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="beforeClass" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="alwaysRun()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="alwaysRun" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alwaysRun -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="dependsOnMethods()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="dependsOnMethods" finished-at="2023-09-25T19:08:12 PDT" depends-on-methods="tests.TestNG_GroupingAndDependency.alwaysRun" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dependsOnMethods -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="description()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="description" description="it is not ready yet" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- description -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="runTestMultipleTimes()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="runTestMultipleTimes" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="runTestMultipleTimes()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="runTestMultipleTimes" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="test" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test1()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="test1" finished-at="2023-09-25T19:08:13 PDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="test2" finished-at="2023-09-25T19:08:13 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test2()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="test2" finished-at="2023-09-25T19:08:13 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test4()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="test4" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test5()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="test5" depends-on-groups="regression" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterClass" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="gracefulTearDown()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="gracefulTearDown" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gracefulTearDown -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterTest" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.TestNG_GroupingAndDependency@57ea113a]" started-at="2023-09-25T19:08:13 PDT" name="afterSuite" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNG_GroupingAndDependency -->
      <class name="tests.TestNG_Features">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:07:58 PDT" name="beforeSuite" finished-at="2023-09-25T19:07:58 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforTest()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="beforTest" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforTest -->
        <test-method is-config="true" signature="user_is_on_test_environment_page()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="user_is_on_test_environment_page" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_is_on_test_environment_page -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="beforeClass" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runTestMultipleTimes()[pri:-1, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="runTestMultipleTimes" finished-at="2023-09-25T19:08:12 PDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runTestMultipleTimes()[pri:-1, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="runTestMultipleTimes" finished-at="2023-09-25T19:08:12 PDT" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestMultipleTimes -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="description()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="description" description="it is not ready yet" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- description -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="dividedByZeroExample1()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="dividedByZeroExample1" finished-at="2023-09-25T19:08:12 PDT" duration-ms="1" status="PASS">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at tests.TestNG_Features.dividedByZeroExample1(TestNG_Features.java:116)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividedByZeroExample1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="executetimeOut()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="executetimeOut" finished-at="2023-09-25T19:08:12 PDT" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executetimeOut -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:12 PDT" name="afterMethod" finished-at="2023-09-25T19:08:12 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="test" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testCaseSkipException()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="testCaseSkipException" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseSkipException -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="alwaysRun()[pri:1, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="alwaysRun" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alwaysRun -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="smoke()[pri:2, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="smoke" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smoke -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="integration()[pri:3, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="integration" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integration -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="beforeMethod" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterClass" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="gracefulTearDown()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="gracefulTearDown" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gracefulTearDown -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterTest" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.TestNG_Features@6ff65192]" started-at="2023-09-25T19:08:13 PDT" name="afterSuite" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNG_Features -->
      <class name="tests.RegistrationFormTest">
        <test-method is-config="true" signature="initializeWebDriver()[pri:0, instance:tests.RegistrationFormTest@31000e60]" started-at="2023-09-25T19:08:10 PDT" name="initializeWebDriver" finished-at="2023-09-25T19:08:12 PDT" duration-ms="2425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeWebDriver -->
        <test-method signature="registrationFormTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.RegistrationFormTest@31000e60]" started-at="2023-09-25T19:08:13 PDT" name="registrationFormTest" data-provider="getTestData" finished-at="2023-09-25T19:08:13 PDT" duration-ms="32" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[smud]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gasstation]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[kabul2123@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9.16579124E9]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12ed12345]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12ed12345]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=116.0.5845.188)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [163f439627ffe59c7d0bfef3454fa899, findElement {using=xpath, value=//li[@class='dropdown']/child::a/span[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\user\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57396}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57396/devtoo..., se:cdpVersion: 116.0.5845.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 163f439627ffe59c7d0bfef3454fa899]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=116.0.5845.188)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [163f439627ffe59c7d0bfef3454fa899, findElement {using=xpath, value=//li[@class='dropdown']/child::a/span[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.188, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\user\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:57396}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57396/devtoo..., se:cdpVersion: 116.0.5845.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 163f439627ffe59c7d0bfef3454fa899
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:541)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy27.click(Unknown Source)
at pageObjects.RegistrationFormPageObjects.clickOnMyAccount(RegistrationFormPageObjects.java:59)
at tests.RegistrationFormTest.registrationFormTest(RegistrationFormTest.java:30)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationFormTest -->
        <test-method is-config="true" signature="close()[pri:0, instance:tests.RegistrationFormTest@31000e60]" started-at="2023-09-25T19:08:13 PDT" name="close" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- tests.RegistrationFormTest -->
      <class name="tests.DataProviderTest">
        <test-method signature="test(java.lang.String,java.lang.String)[pri:0, instance:tests.DataProviderTest@1fde5d22]" started-at="2023-09-25T19:08:13 PDT" name="test" data-provider="data" finished-at="2023-09-25T19:08:13 PDT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.lang.String,java.lang.String)[pri:0, instance:tests.DataProviderTest@1fde5d22]" started-at="2023-09-25T19:08:13 PDT" name="test" data-provider="data" finished-at="2023-09-25T19:08:13 PDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- tests.DataProviderTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
